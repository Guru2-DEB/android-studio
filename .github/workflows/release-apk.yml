name: üöÄ Release APK

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # 1) Decode keystore
      - name: Decode release keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > release-keystore.jks

      # 2) Build Release APK
      - name: Build Release APK
        working-directory: android-studio      # ‚Üê ÏàòÏ†ïÎêú Í≤ΩÎ°ú
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS:       ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD:    ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=../release-keystore.jks \
            -Pandroid.injected.signing.store.password=$ANDROID_KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$ANDROID_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$ANDROID_KEY_PASSWORD

      # 3) (ÏÑ†ÌÉù) GitHub Release ÎßåÎì§Í≥† APK Ï≤®Î∂Ä
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android-studio/app/build/outputs/apk/release/app-release.apk
          asset_name: app-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
